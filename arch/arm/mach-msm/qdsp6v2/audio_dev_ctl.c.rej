--- arch/arm/mach-msm/qdsp6v2/audio_dev_ctl.c	2011-07-20 10:13:21.000000000 +0400
+++ arch/arm/mach-msm/qdsp6v2/audio_dev_ctl.c	2011-08-12 15:58:44.000000000 +0400
@@ -27,6 +27,8 @@
 #include <mach/qdsp6v2/audio_dev_ctl.h>
 #include <mach/debug_mm.h>
 #include <mach/qdsp6v2/apr_audio.h>
+#include <mach/qdsp6v2/q6afe.h>
+#include <mach/qdsp6v2/q6voice.h>
 #include "q6adm.h"
 
 #ifndef MAX
@@ -131,16 +133,19 @@
 int msm_set_copp_id(int session_id, int copp_id)
 {
 	int rc = 0;
+        int index;
 
 	if (session_id < 1 || session_id > 8)
 		return -EINVAL;
-	if (copp_id < 0 || copp_id > AFE_MAX_PORTS)
+        if (afe_validate_port(copp_id) < 0)
 		return -EINVAL;
+
+	index = afe_get_port_index(copp_id);
 	pr_debug("%s: session[%d] copp_id[%d]\n", __func__, session_id,
 						copp_id);
 	mutex_lock(&routing_info.copp_list_mutex);
-	if (routing_info.copp_list[session_id][copp_id] == DEVICE_IGNORE)
-		routing_info.copp_list[session_id][copp_id] = copp_id;
+	if (routing_info.copp_list[session_id][index] == DEVICE_IGNORE)
+		routing_info.copp_list[session_id][index] = copp_id;
 	mutex_unlock(&routing_info.copp_list_mutex);
 
 	return rc;
@@ -150,13 +155,15 @@
 int msm_clear_copp_id(int session_id, int copp_id)
 {
 	int rc = 0;
+	int index = afe_get_port_index(copp_id);
+
 	if (session_id < 1 || session_id > 8)
 		return -EINVAL;
 	pr_debug("%s: session[%d] copp_id[%d]\n", __func__, session_id,
 						copp_id);
 	mutex_lock(&routing_info.copp_list_mutex);
-	if (routing_info.copp_list[session_id][copp_id] == copp_id)
-		routing_info.copp_list[session_id][copp_id] = DEVICE_IGNORE;
+	if (routing_info.copp_list[session_id][index] == copp_id)
+		routing_info.copp_list[session_id][index] = DEVICE_IGNORE;
 	mutex_unlock(&routing_info.copp_list_mutex);
 
 	return rc;
@@ -332,13 +339,21 @@
 
 	mutex_lock(&routing_info.adm_mutex);
 	if (set) {
-		rc = adm_open(copp_id, popp_id, PLAYBACK, rate, mode,
+		rc = adm_open(copp_id, PLAYBACK, rate, mode,
 			DEFAULT_COPP_TOPOLOGY);
 		if (rc < 0) {
 			pr_aud_err("%s: adm open fail rc[%d]\n", __func__, rc);
 			rc = -EINVAL;
 			goto fail_cmd;
 		}
+
+                rc = adm_matrix_map(popp_id, PLAYBACK, 1, &copp_id);
+                if (rc < 0) {
+                        pr_err("%s: matrix map failed rc[%d]\n", __func__, rc);
+                        adm_close(copp_id);
+                        rc = -EINVAL;
+                        goto fail_cmd;
+                }
 		msm_set_copp_id(popp_id, copp_id);
 	} else {
 		for (i = 0; i < AFE_MAX_PORTS; i++) {
@@ -458,13 +473,20 @@
 			rate = 16000;
 		}
 		mutex_unlock(&adm_tx_topology_tbl.lock);
-		rc = adm_open(copp_id, popp_id, LIVE_RECORDING, rate, mode,
-			topology);
+		rc = adm_open(copp_id, LIVE_RECORDING, rate, mode, topology);
 		if (rc < 0) {
 			pr_aud_err("%s: adm open fail rc[%d]\n", __func__, rc);
 			rc = -EINVAL;
 			goto fail_cmd;
 		}
+
+                rc = adm_matrix_map(popp_id, LIVE_RECORDING, 1, &copp_id);
+                if (rc < 0) {
+                        pr_err("%s: matrix map failed rc[%d]\n", __func__, rc);
+                        adm_close(copp_id);
+                        rc = -EINVAL;
+                        goto fail_cmd;
+                }
 		msm_set_copp_id(popp_id, copp_id);
 	} else {
 		for (i = 0; i < AFE_MAX_PORTS; i++) {
@@ -567,10 +589,8 @@
 
 int msm_get_voc_freq(int *tx_freq, int *rx_freq)
 {
-	*tx_freq = (0 == voc_tx_freq ? routing_info.voice_tx_sample_rate
-				: voc_tx_freq);
-	*rx_freq = (0 == voc_rx_freq ? routing_info.voice_rx_sample_rate
-				: voc_rx_freq);
+	*tx_freq = (0 == voc_tx_freq ? routing_info.voice_tx_sample_rate : voc_tx_freq);
+	*rx_freq = (0 == voc_rx_freq ? routing_info.voice_rx_sample_rate : voc_rx_freq);
 	return 0;
 }
 EXPORT_SYMBOL(msm_get_voc_freq);
@@ -914,6 +934,232 @@
 }
 EXPORT_SYMBOL(msm_snddev_enable_sidetone);
 
+int msm_enable_incall_recording(int popp_id, int rec_mode, int rate,
+                               int channel_mode)
+{
+       int rc = 0;
+       int port_id[2];
+       port_id[0] = VOICE_RECORD_TX;
+       port_id[1] = VOICE_RECORD_RX;
+
+       pr_debug("%s: popp_id %d, rec_mode %d, rate %d, channel_mode %d\n",
+                __func__, popp_id, rec_mode, rate, channel_mode);
+
+       mutex_lock(&routing_info.adm_mutex);
+
+       if (rec_mode == VOC_REC_UPLINK) {
+               rc = afe_start_pseudo_port(port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Tx pseudo port start\n",
+                              __func__, rc);
+
+                       goto fail_cmd;
+               }
+
+               rc = adm_open(port_id[0], LIVE_RECORDING, rate, channel_mode,
+                               DEFAULT_COPP_TOPOLOGY);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM open %d\n",
+                              __func__, rc, port_id[0]);
+
+                       goto fail_cmd;
+               }
+
+               rc = adm_matrix_map(popp_id, LIVE_RECORDING, 1, &port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM matrix map %d\n",
+                              __func__, rc, port_id[0]);
+
+                       goto fail_cmd;
+               }
+
+               msm_set_copp_id(popp_id, port_id[0]);
+
+       } else if (rec_mode == VOC_REC_DOWNLINK) {
+               rc = afe_start_pseudo_port(port_id[1]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Rx pseudo port start\n",
+                              __func__, rc);
+
+                       goto fail_cmd;
+               }
+
+               rc = adm_open(port_id[1], LIVE_RECORDING, rate, channel_mode,
+                               DEFAULT_COPP_TOPOLOGY);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM open %d\n",
+                              __func__, rc, port_id[1]);
+
+                       goto fail_cmd;
+               }
+
+               rc = adm_matrix_map(popp_id, LIVE_RECORDING, 1, &port_id[1]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM matrix map %d\n",
+                              __func__, rc, port_id[1]);
+
+                       goto fail_cmd;
+               }
+
+               msm_set_copp_id(popp_id, port_id[1]);
+
+       } else if (rec_mode == VOC_REC_BOTH) {
+               rc = afe_start_pseudo_port(port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Tx pseudo port start\n",
+                              __func__, rc);
+
+                       goto fail_cmd;
+               }
+
+               rc = adm_open(port_id[0], LIVE_RECORDING, rate, channel_mode,
+                               DEFAULT_COPP_TOPOLOGY);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM open %d\n",
+                              __func__, rc, port_id[0]);
+
+                       goto fail_cmd;
+               }
+
+               msm_set_copp_id(popp_id, port_id[0]);
+
+               rc = afe_start_pseudo_port(port_id[1]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Rx pseudo port start\n",
+                              __func__, rc);
+
+                       goto fail_cmd;
+               }
+
+               rc = adm_open(port_id[1], LIVE_RECORDING, rate, channel_mode,
+                               DEFAULT_COPP_TOPOLOGY);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM open %d\n",
+                              __func__, rc, port_id[0]);
+
+                       goto fail_cmd;
+               }
+
+               rc = adm_matrix_map(popp_id, LIVE_RECORDING, 2, &port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM matrix map\n",
+                              __func__, rc);
+
+                       goto fail_cmd;
+               }
+
+               msm_set_copp_id(popp_id, port_id[1]);
+       } else {
+               pr_err("%s Unknown rec_mode %d\n", __func__, rec_mode);
+
+               goto fail_cmd;
+       }
+
+       rc = voice_start_record(rec_mode, 1);
+
+fail_cmd:
+       mutex_unlock(&routing_info.adm_mutex);
+       return rc;
+}
+
+int msm_disable_incall_recording(uint32_t popp_id, uint32_t rec_mode)
+{
+       int rc = 0;
+       uint32_t port_id[2];
+       port_id[0] = VOICE_RECORD_TX;
+       port_id[1] = VOICE_RECORD_RX;
+
+       pr_debug("%s: popp_id %d, rec_mode %d\n", __func__, popp_id, rec_mode);
+
+       mutex_lock(&routing_info.adm_mutex);
+
+       rc = voice_start_record(rec_mode, 0);
+       if (rc < 0) {
+               pr_err("%s: Error %d stopping record\n", __func__, rc);
+
+               goto fail_cmd;
+       }
+
+       if (rec_mode == VOC_REC_UPLINK) {
+               rc = adm_close(port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM close %d\n",
+                              __func__, rc, port_id[0]);
+
+                       goto fail_cmd;
+               }
+
+               msm_clear_copp_id(popp_id, port_id[0]);
+
+               rc = afe_stop_pseudo_port(port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Tx pseudo port stop\n",
+                              __func__, rc);
+                       goto fail_cmd;
+               }
+
+       } else if (rec_mode == VOC_REC_DOWNLINK) {
+               rc = adm_close(port_id[1]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM close %d\n",
+                              __func__, rc, port_id[1]);
+
+                       goto fail_cmd;
+               }
+
+               msm_clear_copp_id(popp_id, port_id[1]);
+
+               rc = afe_stop_pseudo_port(port_id[1]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Rx pseudo port stop\n",
+                              __func__, rc);
+                       goto fail_cmd;
+               }
+       } else if (rec_mode == VOC_REC_BOTH) {
+               rc = adm_close(port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM close %d\n",
+                              __func__, rc, port_id[0]);
+
+                       goto fail_cmd;
+               }
+
+               msm_clear_copp_id(popp_id, port_id[0]);
+
+               rc = afe_stop_pseudo_port(port_id[0]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Tx pseudo port stop\n",
+                              __func__, rc);
+                       goto fail_cmd;
+               }
+
+               rc = adm_close(port_id[1]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in ADM close %d\n",
+                              __func__, rc, port_id[1]);
+
+                       goto fail_cmd;
+               }
+
+               msm_clear_copp_id(popp_id, port_id[1]);
+
+               rc = afe_stop_pseudo_port(port_id[1]);
+               if (rc < 0) {
+                       pr_err("%s: Error %d in Rx pseudo port stop\n",
+                              __func__, rc);
+                       goto fail_cmd;
+               }
+       } else {
+               pr_err("%s Unknown rec_mode %d\n", __func__, rec_mode);
+
+               goto fail_cmd;
+       }
+
+fail_cmd:
+       mutex_unlock(&routing_info.adm_mutex);
+       return rc;
+}
+
 static int audio_dev_ctrl_ioctl(struct inode *inode, struct file *file,
 	unsigned int cmd, unsigned long arg)
 {
