--- arch/arm/mach-msm/qdsp6v2/pcm_in.c	2011-07-20 10:13:21.000000000 +0400
+++ arch/arm/mach-msm/qdsp6v2/pcm_in.c	2011-08-12 13:42:53.000000000 +0400
@@ -36,6 +36,8 @@
 #define BUFFER_SIZE_MULTIPLE 4
 #define MIN_BUFFER_SIZE 160
 
+#define VOC_REC_NONE 0xFF
+
 struct pcm {
 	struct mutex lock;
 	struct mutex read_lock;
@@ -175,6 +177,11 @@
 			q6asm_read(pcm->ac);
 		pr_info("%s: AUDIO_START session id[%d]\n", __func__,
 							pcm->ac->session);
+
+                if (pcm->rec_mode != VOC_REC_NONE)
+                        msm_enable_incall_recording(pcm->ac->session,
+                        pcm->rec_mode, pcm->sample_rate, pcm->channel_count);
+
 		break;
 	}
 	case AUDIO_GET_SESSION_ID: {
@@ -256,6 +263,30 @@
 		break;
 	}
 
+        case AUDIO_SET_INCALL: {
+                if (copy_from_user(&pcm->rec_mode,
+                                   (void *) arg,
+                                   sizeof(pcm->rec_mode))) {
+                        rc = -EFAULT;
+                        pr_err("%s: Error copying in-call mode\n", __func__);
+                        break;
+                }
+
+                if (pcm->rec_mode != VOC_REC_UPLINK &&
+                    pcm->rec_mode != VOC_REC_DOWNLINK &&
+                    pcm->rec_mode != VOC_REC_BOTH) {
+                        rc = -EINVAL;
+                        pcm->rec_mode = VOC_REC_NONE;
+
+                        pr_err("%s: Invalid %d in-call rec_mode\n",
+                               __func__, pcm->rec_mode);
+                        break;
+                }
+
+                pr_debug("%s: In-call rec_mode %d\n", __func__, pcm->rec_mode);
+                break;
+        }
+
 	default:
 		rc = -EINVAL;
 		break;
@@ -302,6 +333,9 @@
 	atomic_set(&pcm->in_enabled, 0);
 	atomic_set(&pcm->in_count, 0);
 	atomic_set(&pcm->in_opened, 1);
+
+	pcm->rec_mode = VOC_REC_NONE;
+
 	file->private_data = pcm;
 	getnstimeofday(&ts);
 	rtc_time_to_tm(ts.tv_sec, &tm);
@@ -396,6 +430,11 @@
 	}
 	if (pcm->ac) {
 		mutex_lock(&pcm->lock);
+	        if ((pcm->rec_mode != VOC_REC_NONE) && atomic_read(&pcm->in_enabled)) {
+        	        msm_disable_incall_recording(pcm->ac->session, pcm->rec_mode);
+	                pcm->rec_mode = VOC_REC_NONE;
+	        }
+
 		/* remove this session from topology list */
 		auddev_cfg_tx_copp_topology(pcm->ac->session,
 				DEFAULT_COPP_TOPOLOGY);
